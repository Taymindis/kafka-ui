replicaCount: 1

image:
  registry: docker.io
  repository: provectuslabs/kafka-ui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

existingConfigMap: ""
existingSecret: ""
envs:
  secret: {}
  config:
    KAFKA_CLUSTERS_0_NAME: "sg-kafka"
    KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka-sg-cp-kafka-0-svc:9092,kafka-sg-cp-kafka-1-svc:9092,kafka-sg-cp-kafka-2-svc:9092"
    KAFKA_CLUSTERS_0_ZOOKEEPER: "kafka-sg-cp-zookeeper-0-svc:2181,kafka-sg-cp-zookeeper-1-svc:2181,kafka-sg-cp-zookeeper-2-svc:2181"
    KAFKA_CLUSTERS_0_JMXPORT: "5555"
    KAFKA_CLUSTERS_0_SCHEMAREGISTRY: "http://kafka-sg-cp-schema-registry:8081"
    KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: "kafka-sg-connect"
    KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: "http://kafka-sg-cp-kafka-connect:8083"
    KAFKA_CLUSTERS_0_KSQLDBSERVER: "http://kafka-sg-cp-ksql-server:8088"


networkPolicy:
  enabled: false
  egressRules:
    ## Additional custom egress rules
    ## e.g:
    ## customRules:
    ##   - to:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []
  ingressRules:
    ## Additional custom ingress rules
    ## e.g:
    ## customRules:
    ##   - from:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  # if you want to force a specific nodePort. Must be use with service.type=NodePort
  # nodePort:

# Ingress configuration
ingress:
  # Enable ingress resource
  enabled: true

  # Annotations for the Ingress
  annotations: {}

  # ingressClassName for the Ingress
  ingressClassName: "nginx"

  # The path for the Ingress
  path: "/"

  # The hostname for the Ingress
  host: "tadika.kafka.com"

  # configs for Ingress TLS
  tls:
    # Enable TLS termination for the Ingress
    enabled: false
    # the name of a pre-created Secret containing a TLS private key and certificate
    secretName: ""

  # HTTP paths to add to the Ingress before the default path
  precedingPaths: []

  # Http paths to add to the Ingress after the default path
  succeedingPaths: []

resources: {}
  # limits:
  #   cpu: 200m
  #   memory: 512Mi
  # requests:
  #   cpu: 200m
  #   memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env: {}

initContainers: {}

volumeMounts: {}

volumes: {}
